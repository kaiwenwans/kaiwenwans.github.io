{"componentChunkName":"component---src-templates-blog-post-js","path":"/deploy-gatsby-by-github-action/","result":{"data":{"site":{"siteMetadata":{"title":"kevin wang's blog"}},"markdownRemark":{"id":"c5b2deff-7bc9-5e4c-afe0-0cb25cdd2900","excerpt":"本文會提到 設定 GitHub Action   透過 GitHub Action 發佈 Gatsby Project到 GitHub Page   GitHub Action 的計費方式 前言 在 GitHub Action 推出前， GitHub 最常搭配的CI服務應該是 Travis CI…","html":"<h2>本文會提到</h2>\n<ol>\n<li>設定 GitHub Action  </li>\n<li>透過 GitHub Action 發佈 Gatsby Project到 GitHub Page  </li>\n<li>GitHub Action 的計費方式</li>\n</ol>\n<h2>前言</h2>\n<p>在 GitHub Action 推出前，<br>\nGitHub 最常搭配的CI服務應該是 Travis CI，<br>\n相信大家有在 GitHub 看開源專案的時候，<br>\n看過有些readme上的 <strong>build pass</strong> 小貼紙，<br>\n通常都是Travis CI的。\n在近期的 GitHub + Travis CI實際串接中，<br>\n發現 GitHub Action 比剛出的時候似乎改了不少，<br>\n想想編譯部落格不太需要繞一圈去搭配一個額外的CI/CD服務，<br>\n所以決定試試實際串接 GitHub Action。  </p>\n<h2>前置準備</h2>\n<ol>\n<li>一個 GitHub 帳號  </li>\n<li>一個在 GitHub 上要佈署的專案  </li>\n</ol>\n<p>接下來是確認 <a href=\"https://github.com/features/actions#pricing-details\">Pricing</a>，<br>\n目前 GitHub Action 很佛心的提供 Open Source Project 的免費使用，<br>\n更佛心的點是相比Travis CI，<br>\nGitHub Action Free Plan直接提供了每個月2000分鐘的使用時間，<br>\n還提供了 GitHub Action Marketplace，<br>\n可以方便套用別人寫好的 GitHub Action。</p>\n<h2>設定</h2>\n<h3>新增 perrsonal sccess token</h3>\n<p>首先要新增 perrsonal sccess token，<br>\n到 GitHub 的 Settings/Developer/settings/Personal access tokens 下產生一組新的token，<br>\nNote 打一組自己會記得的，<br>\n如果是Public Repo 的話選 <strong>public_repo</strong>，<br>\n如果是Private Repo 的話要選整個 Repo 權限，<br>\n記得產生完要記錄起來。  </p>\n<h3>設定 Secrets</h3>\n<p>到要自動發佈 GitHub Repo的 Settings/Secrets 新增一組New Secret:  </p>\n<p>Name:打自己看得懂意思的就好，等等會用到<br>\nValue:要填上剛剛產生的token  </p>\n<h2>新增Action</h2>\n<p>接著到GitHub要發佈 Repo 的 Action 頁，<br>\n這裡我選擇套用<a href=\"https://github.com/peaceiris/actions-gh-pages\">寫好的GitHub Action</a>試試效果。</p>\n<p>首先要先建立一個 .yml檔案，<br>\n根據 <a href=\"https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#creating-a-workflow-file\">文件</a> 要放在以下位置</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.\n└── .github\n    ├── workflows\n    └── your-workflow.yml(.yaml 也可以)</code></pre></div>\n<p>參考以下設定</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Gatsby Publish\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> master\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># 這個是 job_id</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> \n    <span class=\"token comment\"># 指定這個job要跑在什麼環境上 要注意 GitHub Runner 每次都會是乾淨環境</span>\n    <span class=\"token comment\"># 可以指定 self-hosted runner 然後宣告成 </span>\n    <span class=\"token comment\"># [self-hosted, windows/linux/macOS,x86/x64/ARM/ARM64]</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest \n    <span class=\"token comment\"># 每個job會有很多的任務，這些任務集合叫做Steps，會依序執行</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span> \n      <span class=\"token comment\"># uses 代表套用現成的action</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2 \n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> peaceiris/actions<span class=\"token punctuation\">-</span>gh<span class=\"token punctuation\">-</span>pages@v3\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">personal_token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.剛剛設定的SecretName <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token comment\"># 發佈到GitHub Page 所在 Repo </span>\n          <span class=\"token key atrule\">external_repository</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>/<span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>.github.io           \n          <span class=\"token key atrule\">publish_branch</span><span class=\"token punctuation\">:</span> master\n          <span class=\"token key atrule\">publish_dir</span><span class=\"token punctuation\">:</span> ./public</code></pre></div>\n<p>都設定正確的話，<br>\n當 master 有新的 push 的時候，<br>\n就會自動執行設定好的 GitHub Action，<br>\nlive log可以在 Repo 下的 Actions 看當次 Workflow 的執行紀錄，<br>\n可以很方便看 Workflow 內每個 action 的執行時間，<br>\n以及當發生錯誤時是哪個環節出錯，<br>\n這樣一來就可以完成 push 到 master 後自動部署任務了。  </p>\n<h2>GitHub Action Billing 計算方式</h2>\n<p>前面有提到，<br>\n如果是Private Repo的話執行 GitHub Action 要付費，<br>\n但是 GitHub 有提供免費額度，<br>\n實際使用與剩餘時間是放在 <a href=\"https://github.com/settings/billing\">帳單頁</a>，<br>\n在實際串接GitHub Action中我並沒有很順利一次串接成功，<br>\n比對了一下實際使用時間，<br>\n以及以我串接的紀錄來說:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#4 1m43\n#3 17s\n#2 17s\n#1 22s</code></pre></div>\n<p>這樣總時數是2m39s，<br>\n而實際帳單是 5 of 2000 min included ，<br>\n推測起來 GitHub Action 實際計算方式是一個 Action 最小執行時間單位為一分鐘，<br>\n所以算成 4m43，<br>\n在帳單頁直接顯示成 5m，<br>\n以上是依照結果推測。</p>\n<h2>Job 平行處理與控制</h2>\n<p>在這次的實作中其實只使用了一個job來完成整個部署，<br>\n沒有將CI 與 CD拆分，<br>\n更沒有程式碼的測試案例，<br>\n但其實在實際軟體開發流程中有些情況下會碰到一次部署需要執行多個任務，<br>\n比方像是跑單元測試跟原始碼品質檢查等等，<br>\nGitHub Action有支援平行處理job，<br>\n並且可以透過簡單的語法來控制流程，<br>\n比方像是:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">job1</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">job2</span><span class=\"token punctuation\">:</span>    \n  <span class=\"token key atrule\">job3</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">needs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>job1<span class=\"token punctuation\">,</span> job2<span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">job4</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">needs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>job3<span class=\"token punctuation\">]</span></code></pre></div>\n<p>透過 <strong>needs</strong> 語法就能很好的控制task之間的相依性。  </p>\n<p>ref:</p>\n<ol>\n<li><a href=\"https://docs.github.com/en/actions\">https://docs.github.com/en/actions</a></li>\n<li><a href=\"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions\">https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions</a></li>\n<li><a href=\"https://github.com/actions/starter-workflows/tree/master\">https://github.com/actions/starter-workflows/tree/master</a></li>\n<li><a href=\"https://jiaming0708.github.io/2020/05/21/github-action-and-package/\">https://jiaming0708.github.io/2020/05/21/github-action-and-package/</a></li>\n</ol>","frontmatter":{"title":"透過 GitHub Action 將 Gatsby 部署到 GitHub Page","date":"August 23, 2020","description":"GitHub Action study note"}}},"pageContext":{"slug":"/deploy-gatsby-by-github-action/","previous":{"fields":{"slug":"/deploy-gatsby-blog-note/"},"frontmatter":{"title":"部署Gatsby專案到Github Page"}},"next":null}},"staticQueryHashes":["1146911855","3000541721"]}