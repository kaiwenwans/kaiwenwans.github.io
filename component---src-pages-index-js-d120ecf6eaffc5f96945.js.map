{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/pages/index.js"],"names":["Bio","author","useStaticQuery","site","siteMetadata","style","display","marginBottom","rhythm","to","name","BlogIndex","data","location","siteTitle","title","posts","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","key","boxShadow","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"6FAAA,iDA4CeA,IA9BH,WACV,IAaQC,EAbKC,yBAAe,cAaJC,KAAKC,aAArBH,OACR,OACI,yBACEI,MAAO,CACLC,QAAQ,OACRC,aAAcC,YAAO,OAGzB,yCACa,gCAAQ,kBAAC,OAAD,CAAMC,GAAG,WAAWR,EAAOS,OADhD,Q,kCCpCN,4FA8CeC,UAtCG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAYF,EAAKT,KAAKC,aAAaW,MACnCC,EAAQJ,EAAKK,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQL,SAAUA,EAAUE,MAAOD,GACjC,kBAAC,IAAD,CAAKC,MAAM,cACX,kBAAC,IAAD,MACCC,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACElB,MAAO,CACLE,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMH,MAAO,CAAEoB,UAAU,QAAWhB,GAAIW,EAAKE,OAAOC,MACjDR,IAGL,+BAAQK,EAAKC,YAAYK,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQR,EAAKC,YAAYQ,aAAeT,EAAKU","file":"component---src-pages-index-js-d120ecf6eaffc5f96945.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nimport { Link } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {      \n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }          \n        }\n      }\n    }\n  `)\n\n  const { author } = data.site.siteMetadata\n  return (\n      <div\n        style={{\n          display: `flex`,\n          marginBottom: rhythm(2.5),\n        }}\n      >\n      <p>\n        Written by <strong><Link to=\"/about/\">{author.name}</Link></strong>\n        {` `}\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC },\n      filter: {fileAbsolutePath: {regex: \"/content/blog/\"}}\n      ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}