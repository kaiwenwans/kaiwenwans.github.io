{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","author","useStaticQuery","site","siteMetadata","style","display","marginBottom","rhythm","to","name","BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","marginTop","scale","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"mappings":"6FAAA,iDA4CeA,IA9BH,WACV,IAaQC,EAbKC,yBAAe,cAaJC,KAAKC,aAArBH,OACR,OACI,yBACEI,MAAO,CACLC,QAAQ,OACRC,aAAcC,YAAO,OAGzB,yCACa,gCAAQ,kBAAC,OAAD,CAAMC,GAAG,WAAWR,EAAOS,OADhD,Q,kCCpCN,4FAgFeC,UAxEU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKT,KAAKC,aAAac,MACjCC,EAAmBN,EAAnBM,SAAUC,EAASP,EAATO,KAElB,OACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,kBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,iCACE,gCACE,wBACElB,MAAO,CACLmB,UAAWhB,YAAO,GAClBD,aAAc,IAGfQ,EAAKM,YAAYH,OAEpB,uBACEb,MAAK,iBACAoB,aAAM,IADN,CAEHnB,QAAQ,QACRC,aAAcC,YAAO,MAGtBO,EAAKM,YAAYK,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQb,EAAKc,QACjD,wBACExB,MAAO,CACLE,aAAcC,YAAO,MAGzB,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACEH,MAAO,CACLC,QAAQ,OACRwB,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGd,GACC,kBAAC,OAAD,CAAMV,GAAIU,EAASe,OAAOC,KAAMC,IAAI,QAApC,KACKjB,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMX,GAAIW,EAAKc,OAAOC,KAAMC,IAAI,QAC7BhB,EAAKC,YAAYH,MADpB","file":"component---src-templates-blog-post-js-28e160a727db87887121.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nimport { Link } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {      \n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }          \n        }\n      }\n    }\n  `)\n\n  const { author } = data.site.siteMetadata\n  return (\n      <div\n        style={{\n          display: `flex`,\n          marginBottom: rhythm(2.5),\n        }}\n      >\n      <p>\n        Written by <strong><Link to=\"/about/\">{author.name}</Link></strong>\n        {` `}\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}